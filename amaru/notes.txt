JSON
----

  {
    "id": <string>,
    "size": <32|64|128>,

    "exponent": {
      "size": <uint32_t>,
      "minimum": <int32_t>
      "maximum": <int32_t>
      // Constraint: maximum - minimum < 2^{size}
    },

    "mantissa": {
      "size": <uint32_t>,
    },

    "storage:" {
      "limbs": <1|2>,
      // Alternatives:
      // 1. <"index"|"exponent">: <binary|decimal>
      // 2. "is_compact": <true/false>
      // 3. "mode": <compact|full>
      "external": {
          ???
      } 
    },

    "calculation": {
      "limbs": <1|2|4>,
    }
  }

TYPES (MANUAL)
--------------

  uint32_t
  uint64_t
  uint128_t // AMARU_UINT128_T

  amaru_<size>_limb1_t
  amaru_<size>_limb2_t
  amaru_<size>_limb4_t

  struct {
    bool                 is_binary;
    int32_t              exponent;
    amaru_<size>_limb1_t mantissa;
  } amaru_<size>_fields_t;

DATA (GENERATED)
----------------

static struct {

  uint32_t size;

  struct {
    int32_t minimum;
  } exponent;

  struct {
    int32_t size;
  } mantissa;

  struct {
    uint32_t limbs;
    int32_t index_offset;
  } storage;
  
  struct {
    int32_t shift;
  } calculation;


} amaru_<id>_data;


FUNCTIONS (MANUAL)
------------------

FUNCTIONS (GENERATED)
---------------------


